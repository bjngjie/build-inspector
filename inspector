#!/usr/bin/env ruby

=begin
Copyright 2016 SourceClear Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
=end

require 'optparse'
require_relative 'lib/build_inspector'
require_relative 'lib/configuration'
require_relative 'lib/evidence_collector'
require_relative 'lib/evidence_processor'
require_relative 'lib/printer'
require_relative 'lib/vagrant_whisperer'
require_relative 'lib/report_builder'
require_relative 'inspector_lib'

# Don't buffer output; flush it immediately.
$stdout.sync = true

options = {
  rollback: true,
  config: 'config.yml',
  branch: 'master',
  only_process: nil,
  is_url: false,
  verbose: false,
}

optparse = OptionParser.new do |opts|
  opts.banner = "Usage #{File.basename($0)} [options] <git repo path>"
  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end

  opts.on('-n', '--no-rollback',
          'Do not roll back the virtual machine state after running') do
    options[:rollback] = false
  end

  opts.on('-v', '--verbose', 'Be verbose') do
    options[:verbose] = true
  end

  opts.on('-c', '--config <PATH>', String,
          "Use configuration file at <PATH>, default=#{options[:config]}") do |config|
    options[:config] = config
  end

  opts.on('-p', '--process <PATH>', String,
          "Only process evidence at <PATH>") do |evidence_path|
    options[:only_process] = evidence_path
  end

  opts.on('-b', '--branch <BRANCH>', String,
          "Clone <BRANCH> from repository URL") do |branch|
    options[:branch] = branch
  end

  opts.on('-P', '--package <PACKAGE>', String, 'Install specified <PACKAGE>') do |package|
    options[:package] = package
  end

  opts.on('--url', String, "Git repo path is a URL") do
    options[:is_url] = true
  end

  opts.on('--gem', String, "Perform a GEM based build") do |type|
    if options[:package]
      options[:config] = 'configs/gem.yml'
    else
      options[:config] = 'configs/bundler.yml'
    end
  end

  opts.on('--gradle', String, "Perform a Gradle based build") do |type|
    options[:config] = 'configs/gradle.yml'

    if options[:package]
      options[:package] = nil
    end
  end

  opts.on('--maven', String, "Perform a Maven based build") do |type|
    options[:config] = 'configs/maven.yml'

    if options[:package]
      options[:package] = nil
    end
  end

  opts.on('--npm', String, "Perform a NPM based build") do |type|
    options[:config] = 'configs/npm.yml'
  end
end
optparse.parse!

if ARGV.size < 1
  puts 'Must specifiy a repository URL'
  puts optparse.help
  exit -1
end

run_inspector(options, ARGV.first)
